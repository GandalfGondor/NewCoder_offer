/*输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。*/
class Solution {
public:
  vector<long> rec;
long pinjie(long a, long b)
{
	int i = 0;
	while (b >= pow(10, i))
		i++;
	return a*pow(10, i) + b;
}
void huishuo(vector<long> numbers, int start)
{
	vector<long> copynum = numbers;
	int i = 0;
	long temp = 0;
	if (start == copynum.size())
	{
		temp = copynum[0];
		for (i = 1; i<copynum.size(); i++)
		{
			temp = pinjie(temp, copynum[i]);
		}
		rec.push_back(temp);
		return;
	}
	for (i = start; i<copynum.size(); i++)
	{
		temp = copynum[start];
		copynum[start] = copynum[i];
		copynum[i] = temp;
		huishuo(copynum, start + 1);
	}
	return;
}

string PrintMinNumber(vector<int> numbers) {
	int i = 0;
	long j = 0;
	if (numbers.empty())
		return "";
	vector<long> numcopy;
	for (i = 0; i < numbers.size(); i++)
	{
		numcopy.push_back(long(numbers[i]));
	}
	huishuo(numcopy, 0);
	j = rec[0];
	for (i = 1; i<rec.size(); i++)
	{
		if (j > rec[i])
			j = rec[i];
	}
	return to_string(j);

}


};