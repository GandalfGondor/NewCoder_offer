class Solution {
public:
    vector<int> v;
    vector<int> printMatrix(vector<vector<int> > matrix) {
        int row = 0;
        if(matrix.empty()) return v;
        while(2*row < matrix.size()&& 2*row < matrix[0].size())
        {
            printfcore(matrix,row);
            row++;
        }
        return v;
    }
  	void printfcore(vector<vector<int> > matrix, int row)
	{
		int i = row;
		int j = row;
		int hang = matrix.size();
		int lie = matrix[0].size();
		while (j<lie - row)
		{
			v.push_back(matrix[i][j]);
			j++;
		}
		j--; i++;
		while (i < hang - row)
		{
			v.push_back(matrix[i][j]);
			i++;
		}
		i--; j--;
		if (hang - 2 * row > 1) {

			while (j >= row && i>row)
			{
				v.push_back(matrix[i][j]);
				j--;
			}
			j++; i--;
		}
		
		if(lie-2*row > 1)
			while (i>row)
			{
				v.push_back(matrix[i][j]);
				i--;
			}
	}
};