/*请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的
struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
    TreeNode(int x) :
            val(x), left(NULL), right(NULL) {
    }
};
*/
class Solution {
public:
bool isSymmetrical(TreeNode* pRoot)
{
	if (pRoot == nullptr)
		return true;
	return isSymmetricalcore(pRoot->left, pRoot->right);
}
bool isSymmetricalcore(TreeNode* pRoot, TreeNode* copy)
{
	if (pRoot == nullptr&&copy == nullptr)
		return true;
	if (pRoot == nullptr||copy == nullptr)
		return false;
	if (pRoot->val != copy->val)
            return false;
    return isSymmetricalcore(pRoot->left, copy->right)&& isSymmetricalcore(pRoot->right, copy->left);
	
}
};