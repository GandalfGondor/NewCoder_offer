new和malloc的区别
#include <malloc.h> 
void *malloc(int size);

1. 申请的内存所在位置
操作符从自由存储区上为对象动态分配内存空间，而malloc函数从堆上动态分配内存。

2、返回类型安全
new操作符内存分配成功时，返回的是对象类型的指针，类型严格与对象匹配，无须进行类型转换，故new是符合
类型安全性的操作符。而malloc内存分配成功则是返回void * ，需要通过强制类型转换将void*指针转换成我们
需要的类型。

3、内存分配失败时的返回值
new内存分配失败时，会返回bac_alloc异常，不会产生NULL，但是malloc分配失败时会返回NULL。

4、是否需要指定内存大小
new操作符会根据类型信息自行计算，但是malloc则需要显式地指出所需内存的尺寸。

5、是否调用构造函数/析构函数
使用new操作符经历步骤：
第一步：调用operator new()函数，分配一块足够大，原始的，未命名的内存空间。
第二步：编译器运行相应的构造函数以构造对象，并为其传入初值。
第三步：对象构造完毕以后，返回一个指向该对象的指针。

使用delete操作符来释放对象内存时：
第一步：调用对象的析构函数。
第二步：调用operator函数来释放内存空间。

总而言之，new会调用，但是malloc不会调用构造或者析构函数

6、针对数组处理不同
C++专门提供了new[]和delete[]类型。malloc需要自己计算数组大小。

7、是否可以重载
new和delete可以重载。malloc/free不可以重载。

8、能够重新分配内存
malloc分配内存后，如果在使用过程中发现内存不足，可以使用realloc函数进行内存重新分配。如果有，原地扩大
可分配的内存地址，并且返回地址，否则分配新的大小空间，然后释放原内存。但是new没有这样的功能。

9、客户处理内存分配不足
new抛出异常之前，会调用一个用户指定的handler。通过
new_handler set_new_handler(new_handler p) throw();
但是对于malloc，用户不能够指定内存分配不足时要干什么事。
































