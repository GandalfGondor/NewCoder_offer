bool isValidSudoku(vector<vector<char>>& board) {
    int row = board.size();
    int col = board[0].size();
    vector<vector<int>> num(row,vector<int>(col,0));
    int i , j;
    for(i=0; i<row; ++i)
    {
    	for(j=0; j<col;++j)
    	{
    		if(board[i][j] != '.')
    			num[i][j] = board[i][j] - '0';
    	}
    }
    int block;
    int pos;
	vector<int> judg(col+1,0);
	vector<int> zero(col+1,0);
    for(i=0; i<col ;++i)
    {
    	for(j=0;j<col;++j)
    	{
    		if(num[i][j] == 0)
    			continue;
    		if(judg[num[i][j]] != 0)
    			return false;
    		else judg[num[i][j]] = 1;
    	}
    	judg = zero;
    	
		for(j=0;j<col;++j)
    	{
    		if(num[j][i] == 0)
    			continue;
    		if(judg[num[j][i]] != 0)
    			return false;
    		else judg[num[j][i]] = 1;
    	}
    	judg = zero;
    	
    	block = i / 3;
    	block = block * 3;
    	pos = (i%3) * 3;
		for(j=block;j<block+3;++j)
    	{
    		for(int m = pos; m<pos+3;++m)
    		{
    			if(num[j][m] == 0)
    				continue;
				if(judg[num[j][m]] != 0)
					return false;
				else judg[num[j][m]] = 1;
			}
    	}
    	judg = zero;
    }
    return true;
}