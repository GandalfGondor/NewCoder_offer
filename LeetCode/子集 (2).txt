void core(vector<int>& nums,vector<vector<int>> &res,vector<int> temp, int pos)
{
	if(pos>=nums.size())
		return ;
	temp.push_back(0);
	int pre = -999999;
	for(int i = pos;i<nums.size();++i)
	{
		while(nums[i] == pre)
			++i;
		if(i>=nums.size())
			return ;
		temp[temp.size()-1] = nums[i];
		res.push_back(temp);
		core(nums,res,temp,i+1);
		pre = nums[i];
	}
}

vector<vector<int>> subsetsWithDup(vector<int>& nums) 
{
	vector<vector<int>> res;
	vector<int> temp;
	res.push_back(temp);
	if(nums.empty())
		return res;
    sort(nums.begin(),nums.end());
	core(nums,res,temp,0);
	return res;
}