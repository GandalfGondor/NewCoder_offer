第一章概述
TCP/IP通常被认为是一个四层协议系统
应用层、运输层、网络层、链路层。运输层有TCP和UDP，网络层有IP、ICMP、IGMP。
应用层有Telnet远程登录，FTP，SMTP，SNMP。
网桥是在链路层上对网络进行互联。路由器是在网络层上进行互联。

封装：
当应用程序用TCP传输，数据送入协议栈中，逐个通过每一层直到被当做一串比特流送入网络，其中每一层对收到的数据
都要增加一些首部信息。

TCP传给IP的数据单元称作TCP报文段或简称为TCP
segment.IP传给网络接口层的数据单元称作IP数据报(IPdatagram)。通过以太网传输的比特流称作帧(Frame)。

分用：当主机收到一个以太网数据帧，数据从协议栈由底层向上升，同时去掉各层协议加上报文首部，每层协议盒
要去检查报文首部中协议标识，确定接收数据的上层协议。

网络层和运输层之间的区别是最为关键的：网络层(IP)提供点到点的服务，而运输层(TCP和UDP)提供端到端的服务。

第二章链路层
链路层最大数据帧长度MTU（最大传输单元）
重要的不是两台主机所在网络的MTU的值，重要的是两台通信主机路径中的最小MTU它被称作路径MTU。

第三章IP网际协议
IP特性：不可靠的意思是它不能保证IP数据报能成功地到达目的地。
无连接这个术语的意思是IP并不维护任何关于后续数据报的状态信息。

TTL生存时间字段设置了数据报可以经过的最多路由器数。它指定了数据报的生存时间。
TTL的初始值由源主机设置（通常为32或64），一旦经过一个处理它的路由器，它的值就减去1。
当该字段的值为0时，数据报就被丢弃，并发送ICMP报文通知源主机。

IP层在内存中有一个路由表。当收到一份数据报并进行发送时，它都要对该表搜索一次。当数据报来自某
个网络接口时，IP首先检查目的IP地址是否为本机的IP地址之一或者IP广播地址。如果确实是这样，数据
报就被送到由IP首部协议字段所指定的协议模块进行处理。如果数据报的目的不是这些地址，那么
(1)如果IP层被设置为路由器的功能，那么就对数据报进行转发
否则(2)数据报被丢弃。

路由表内容：目的IP地址。下一跳路由器IP地址。标志。网络接口。
IP路由选择是逐跳地进行的。首先匹配IP地址(主机地址)，其次匹配网络号，不行寻找默认表目。

第四章ARP：地址解析协议
ARP为IP地址到对应的硬件地址之间提供动态映射。我们之所以用动态这个词是因为这个过程是自动完成的，
一般应用程序用户或系统管理员不必关心。

ARP的功能是在32bit的IP地址和采用不同网络技术的硬件地址之间提供动态映射。

第五章RARP：逆地址解析协议
网络上的每个系统都具有唯一的硬件地址，它是由网络接口生产厂家配置的。无盘系统的RARP实现过程是
从接口卡上读取唯一的硬件地址，然后发送一份RARP请求（一帧在网络上广播的数据），请求某个主机响
应该无盘系统的IP地址（在RARP应答中）。一个RARP请求在网络上进行广播，它在分组中标明发送端的硬
件地址，以请求相应IP地址的响应。应答通常是单播传送的。RARP带来的问题包括使用链路层广播，这样
就阻止大多数路由器转发RARP请求，只返回很少信息：只是系统的IP地址。

第六章ICMP：Internet控制报文协议
ICMP报文是在IP数据报内部被传输的。
ICMP分为差错报文和查询报文

ICMP地址掩码请求与应答：系统广播它的ICMP请求报文
ICMP时间戳请求允许系统向另一个系统查询当前的时间。
ICMP差错报文，即端口不可达报文

第七章Ping程序
目的是为了测试另一台主机是否可达。该程序发送一份ICMP回显请求报文给主机，并等待返回ICMP回显应答。

第八章Traceroute程序
Traceroute程序程序可以让我们看到IP数据报从一台主机传到另一台主机所经过的路由。
Traceroute程序程序还可以让我们使用IP源路由选项。
Traceroute程序使用ICMP报文和IP首部中的TTL字段（生存周期）。

工作过程：
开始时发送一个TTL字段为1的UDP数据报，然后将TTL字段每次加1，以确定路径中的每个路由器。
每个路由器在丢弃UDP数据报时都返回一个ICMP超时报文2而最终目的主机则产生一个ICMP端口不可达的报文。

第九章IP选路
netstat-rn查看路由表
当分组被发往间接路由时，IP地址指明的是最终目的地，但是链路层地址指明的是网关(即下一站路由器)。
G标志区分了直接路由和间接路由。H标志表明，目的地址(netstat命令输出第一行)是一个完整的主机地址。
ICMP重定向差错：当IP数据报应该被发送到另一个路由器时，收到数据报的路由器就要发送ICMP重定向差
错报文给IP数据报的发送端。
路由守护程序（RoutingDaemon）是在路由器上运行路由选择协议的程序，与它的邻居路由器进行对话，通常
被叫做路由守护程序。这个路由守护程序在接收到来自邻居路由器的信息时更新kernel路由表。

第十章动态选路协议
动态选路协议，用于路由器间的通信，RIP，选路信息协议。
RIP报文包含在UDP数据报中。

第十一章UDP：用户数据报协议
UDP不提供可靠性：它把应用程序传给IP层的数据发送出去，但是并不保证它们能到达目的地。
UDP长度字段指的是UDP首部和UDP数据的字节长度。该字段的最小值为8字节（发送一份0字节的
UDP数据报OK）。这个UDP长度是有冗余的。
IP首部的检验和，它只覆盖IP的首部。
UDP和TCP在首部中都有覆盖它们首部和数据的检验和。

IP分片：
IP把MTU与数据报长度进行比较，如果需要则进行分片。分片可以发生在原始发送端主机上，
也可以发生在中间路由器上。
当IP数据报被分片后，每一片都成为一个分组，具有自己的IP首部，并在选择路由时与其他分组独立。

ICMP不可达差错。
利用Traceroute可以确定路径的MTU

ICMP源站抑制差错
我们同样也可以使用UDP产生ICMP“源站抑制(sourcequench)”差错。当一个系统（路由器或主机）
接收数据报的速度比其处理速度快时，可能产生这个差错。

UDP数据报。IP首部包含源端和目的端IP地址，UDP首部包含了源端和目的端的UDP端口号。
大多数UDP服务器在创建UDP端点时都使其本地IP地址具有通配符的特点。
当UDP数据报到达的目的IP地址为广播地址或多播地址，而且在目的IP地址和端口号处有多个端点时，
就向每个端点传送一份数据报的复制（端点的本地IP地址可以含有星号，它可匹配任何目的IP地址）

第十二章广播和多播
广播和多播仅应用于UDP，它们对需将报文同时传往多个接收者的应用来说十分重要。
IP多播提供两类服务：
1)向多个目的地址传送数据。
2)客户对服务器的请求。

第十三章IGMP：Internet组管理协议
IGMP：它让一个物理网络上的所有系统知道主机当前所在的多播组。
IGMP也被当作IP层的一部分。IGMP报文通过IP数据报进行传输。
多播路由器使用IGMP报文来记录与该路由器相连网络中组成员的变化情况
1)当第一个进程加入一个组时，主机就发送一个IGMP报告。
2)进程离开一个组时，主机不发送IGMP报告。
3)多播路由器定时发送IGMP查询来了解是否还有任何主机包含有属于多播组的进程。
4)主机通过发送IGMP报告来响应一个IGMP查询，对每个至少还包含一个进程的组均要发回IGMP报告

第十四章DNS：域名系统
域名系统（DNS）是一种用于TCP/IP应用程序的分布式数据库，它提供主机名字和IP地址之间的转换
及有关电子邮件的选路信息。
DNS的访问是通过一个地址解析器（resolver）来完成的。在Unix主机中，该解析器主要是通过两
个库函数gethostbyname(3)和gethostbyaddr(3)。
每个名字服务器必须知道如何同根的名字服务器联系。
根服务器则知道所有二级域中的每个授权名字服务器的名字和位置（即IP地址）。
DNS的一个基本特性是使用超高速缓存。
DNS查询报文最常用的是A类，即期望获得IP地址。
为了减少Internet上DNS的通信量，所有的名字服务器均使用高速缓存。在标准的Unix实现中，
高速缓存是由名字服务器而不是由名字解析器维护的。
DNS查询和响应通常经过广域网。

第十五章 TFTP：简单文件传送协议
TFTP将使用UDP，是一个简单的协议，适合于只读存储器，仅用于无盘系统进行系统引导。它只使用几种
报文格式，是一种停止等待协议。

第十六章 BOOTP：引导程序协议
BOOTP用于无盘系统进行系统引导的替代方法，称为引导程序协议。
BOOTP使用UDP，且通常需与TFTP。BOOTP服务器比RARP服务器更易于实现，因为BOOTP请求和应答是在UDP数据报中，
而不是特殊的数据链路层帧。

第十七章TCP：传输控制协议
尽管TCP和UDP都使用相同的网络层（IP），TCP却向应用层提供与UDP完全不同的服务。TCP提供一种面向连接的、
可靠的字节流服务。
TCP通过下列方式来提供可靠性：
1、应用数据被分割成TCP认为最适合发送的数据块。
2、当TCP发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。
3、当TCP收到发自TCP连接另一端的数据，它将发送一个确认。
4、TCP将保持它首部和数据的检验和。
5、既然TCP报文段作为IP数据报来传输，而IP数据报的到达可能会失序，因此TCP报文段的到达也可能会失序。
6、既然IP数据报会发生重复，TCP的接收端必须丢弃重复的数据。
7、TCP还能提供流量控制。

四元组：IP地址、客户端口号、服务器IP地址和服务器端口号
检验和覆盖了整个的TCP报文段：TCP首部和TCP数据。
接建立和一个连接终止时，双方交换的报文段仅有TCP首部。如果一方没有数据要发送，也使用没有
任何数据的首部来确认收到的数据。在处理超时的许多情况中，也会发送不带任何数据的报文段。
